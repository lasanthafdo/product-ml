<%
   var log = new Log();
   var mlConfigs=require("/includes/ml.json");
   var carbon = require('carbon');
   var mlDatasetService = carbon.server.osgiService('org.wso2.carbon.ml.dataset.MLDatasetService');
   var start = parseInt(request.getParameter("iDisplayStart"));
   var length = parseInt(request.getParameter("iDisplayLength"));
   var datasetID = session.get("datasetId");
   var workflowId = session.get("workflowId");
   if (datasetID != null){
     var features = mlDatasetService.getFeatures(datasetID,workflowId,start,length);
     var json = {};
     json['sEcho'] = request.getParameter("sEcho");
     json['iTotalRecords'] = session.get("numOfFeatures");
     json['iTotalDisplayRecords'] = session.get("numOfFeatures");

     var pageContentAsJson = [];
     for(var i=0; i<features.size(); i++){
        var feature = features.get(i);
     
        var featureAsJson = [];

        featureAsJson.push('<span class="feature">' + feature.getFieldName()
                    + '</span>');
        featureAsJson.push(checkboxRenderer(feature.isInput()));
        featureAsJson.push(listSelectionRenderer(mlConfigs.featureTypes,feature.getType().toString(),"fieldType"));
        featureAsJson.push('<div class="summaryStatistics">' + feature.getSummaryStats() + "</div>");
        
        featureAsJson.push(listSelectionRenderer(mlConfigs.imputeOptions,feature.getImputeOperation().toString(),"imputeMethod"));
        pageContentAsJson.push(featureAsJson);      
       
     }
     response.contentType = "application/Json";
     json['aaData'] = pageContentAsJson;
     response.content = JSON.stringify(json);
   }  

   function checkboxRenderer(value){
     var checkboxControl = '<input type="checkbox"' + 'class="includeFeature" value="includeFeature"';
        if (value){      
         checkboxControl += "checked />";
    } else {
      checkboxControl += "/>";
    }
    return checkboxControl;
   }; 

   function listSelectionRenderer(list, selectedOption, cssClass){
     var selection = "<select class=" + cssClass + ">";
     for (var item in list){
      if (selectedOption.toUpperCase() == list[item].toUpperCase()){
        selection += "<option selected value=\"" + list[item]
            + "\">" + list[item] + "</option>";
      }
      else{
        selection += "<option value=\"" + list[item] + "\">"
            + list[item] + "</option>";
      }
     }
     selection += "</select>";
     return selection;
   }
%>



